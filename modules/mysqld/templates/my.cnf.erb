# Example MySQL config file for medium systems.
#
# This is for a system with little memory (32M - 64M) where MySQL plays
# an important part, or systems up to 128M where MySQL is used together with
# other programs (such as a web server)
#
# MySQL programs look for option files in a set of
# locations which depend on the deployment platform.
# You can copy this option file to one of those
# locations. For information about these locations, see:
# http://dev.mysql.com/doc/mysql/en/option-files.html
#
# In this file, you can use all long options that a program supports.
# If you want to know which options a program supports, run the program
# with the "--help" option.

# The following options will be passed to all MySQL clients
[client]
#password = your_password
port = <%= scope.lookupvar('mysqld::params::port') %>
socket = <%= scope.lookupvar('mysqld::params::sock') %>

# Here follows entries for some specific programs

# The MySQL server
[mysqld]
!includedir <%= scope.lookupvar('mysqld::params::conf_dir') %>/conf.d
datadir = <%= scope.lookupvar('mysqld::params::data_dir') %>
tmpdir = <%= scope.lookupvar('mysqld::params::temp_dir') %>
port = <%= scope.lookupvar('mysqld::params::port') %>
socket = <%= scope.lookupvar('mysqld::params::sock') %>
skip-external-locking
key_buffer_size = <%= scope.lookupvar('mysqld::params::key_buffer_size') %>
max_allowed_packet = <%= scope.lookupvar('mysqld::params::max_allowed_packet') %>
table_open_cache = <%= scope.lookupvar('mysqld::params::table_open_cache') %>
sort_buffer_size = <%= scope.lookupvar('mysqld::params::sort_buffer_size') %>
net_buffer_length = <%= scope.lookupvar('mysqld::params::net_buffer_length') %>
read_buffer_size = <%= scope.lookupvar('mysqld::params::read_buffer_size') %>
read_rnd_buffer_size = <%= scope.lookupvar('mysqld::params::read_rnd_buffer_size') %>
myisam_sort_buffer_size = <%= scope.lookupvar('mysqld::params::myisam_sort_buffer_size') %>

# Don't listen on a TCP/IP port at all. This can be a security enhancement,
# if all processes that need to connect to mysqld run on the same host.
# All interaction with mysqld must be made via Unix sockets or named pipes.
# Note that using this option without enabling named pipes on Windows
# (via the "enable-named-pipe" option) will render mysqld useless!
# 
#skip-networking

# Uncomment the following if you are using InnoDB tables
#innodb_data_home_dir = /usr/local/mysql/cqdata
#innodb_data_file_path = ibdata1:10M:autoextend
#innodb_log_group_home_dir = /usr/local/mysql/cqdata
# You can set .._buffer_pool_size up to 50 - 80 %
# of RAM but beware of setting memory usage too high
#innodb_buffer_pool_size = 16M
#innodb_additional_mem_pool_size = 2M
# Set .._log_file_size to 25 % of buffer pool size
#innodb_log_file_size = 5M
#innodb_log_buffer_size = 8M
#innodb_flush_log_at_trx_commit = 1
#innodb_lock_wait_timeout = 50

[mysqldump]
quick
max_allowed_packet = <%= scope.lookupvar('mysqld::params::max_allowed_packet') %>

[mysql]
no-auto-rehash
# Remove the next comment character if you are not familiar with SQL
#safe-updates

[myisamchk]
key_buffer_size = <%= scope.lookupvar('mysqld::params::key_buffer_size') %>
sort_buffer_size = <%= scope.lookupvar('mysqld::params::sort_buffer_size') %>
read_buffer = <%= scope.lookupvar('mysqld::params::read_buffer') %>
write_buffer = <%= scope.lookupvar('mysqld::params::write_buffer') %>

[mysqlhotcopy]
interactive-timeout

[safe_mysqld]
err-log = <%= scope.lookupvar('mysqld::params::log_dir') %>/mysqld.log
pid-file = <%= scope.lookupvar('mysqld::params::pid_dir') %>/mysqld.pid


